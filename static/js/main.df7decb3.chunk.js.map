{"version":3,"sources":["component/layout/Header.js","component/pages/About.js","component/pages/NotFound.js","context.js","component/contacts/Contact.js","component/contacts/Contacts.js","component/layout/TextInputGroup.js","component/contacts/AddContact.js","component/Test.js","component/contacts/EditContact.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","branding","className","style","headerstyle","to","defaultProps","color","fontSize","About","NotFound","Context","React","createContext","reducer","state","action","type","contacts","filter","contact","id","payload","Provider","dispatch","setState","axios","get","then","res","data","value","this","children","Component","Consumer","Contact","showContactInfo","onShowCLick","e","onDeleteClick","delete","name","email","num","onClick","cursor","float","marginRight","bind","Contacts","Fragment","map","phone","TextInputGroup","label","placeholder","onchange","htmlfor","onChange","AddContact","onsubmit","preventDefault","newContact","post","emil","history","push","target","onSubmit","Test","title","body","fetch","response","json","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.df7decb3.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst Header = ( props ) => {\r\n\tconst {branding} = props;\r\n    return (\r\n        <div  className=\"header\">\r\n        \t<h1 style={headerstyle} >{branding}</h1>\r\n        \t<ul className=\"Navbar\">\r\n        \t\t<li className=\"nav-item\">\r\n        \t\t\t<Link to=\"/\"> Home </Link>\r\n        \t\t</li>\r\n        \t\t<li className=\"nav-item\">\r\n        \t\t\t<Link to=\"/contact/add\"> Add </Link>\r\n        \t\t</li>\r\n        \t\t<li className=\"nav-item\">\r\n        \t\t\t<Link to=\"/about\"> About </Link>\r\n        \t\t</li>\r\n        \t</ul>\r\n        \t        \t\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nHeader.defaultProps = {\r\n\tbranding : 'Default Contact Manager'\r\n}\r\n\r\nHeader.propTypes = {\r\n\tbranding : PropTypes.string.isRequired\r\n}\r\n\r\nconst headerstyle = {\r\n\tcolor: 'green',\r\n\tfontSize: '50px'\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nconst About = ({ className }) => {\r\n    return (\r\n    \t<div>\r\n    \t\t<h1> About Contact Manager </h1>\r\n    \t</div>\r\n        \r\n    );\r\n};\r\n\r\n\r\nexport default About;\r\n","import React from 'react';\r\n\r\nconst NotFound = ({ className }) => {\r\n    return (\r\n        <div>\r\n        \t<h1>Pages Not Found</h1>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\n\r\nexport default NotFound;\r\n","import React, { Component} from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state,action) =>{\r\n\tswitch( action.type ){\r\n\t\tcase 'DELETE_CONTACT' : \r\n\t\t\treturn{\r\n\t\t\t\t...state, // ... is a spread operator\r\n\t\t\t\tcontacts : state.contacts.filter( contact => contact.id !== action.payload)\r\n\t\t\t}\r\n\r\n\t\tcase 'ADD_CONTACT' : \r\n\t\t\treturn{\r\n\t\t\t\t...state,\r\n\t\t\t\tcontacts : [action.payload , ...state.contacts]\r\n\t\t\t}\r\n\t\t\t\t\r\n\t\tdefault : \r\n\t\t\treturn state;\t\r\n\t}\r\n}\r\n\r\nexport class Provider extends Component{\r\n\tstate = {\r\n\t\tcontacts:[],\r\n\r\n\t\tdispatch : action => { this.setState( state => reducer( state,action)) }\r\n\t}\r\n\r\n\tcomponentDidMount(){\r\n\t\taxios.get('https:jsonplaceholder.typicode.com/users')\r\n\t\t\t.then(res => this.setState({ contacts : res.data }));\r\n\t}\r\n\t// above function extracts all the user from the urls and set values the contacts array varaible\r\n\r\n\trender(){\r\n\t\treturn(\r\n\t\t\t\t<Context.Provider value = {this.state}>\r\n\t\t\t\t\t{this.props.children}\r\n\t\t\t\t</Context.Provider>\r\n\t\t\t)\r\n\t}\r\n}\r\n\r\nexport const Consumer = Context.Consumer;","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Consumer } from '../../context'; // in order to acces the state from context\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Contact extends React.Component{\r\n\tstate ={\r\n\t\tshowContactInfo : false \r\n\t}\r\n\tonShowCLick = e =>{\r\n\t\tthis.setState({\r\n\t\t\tshowContactInfo: !this.state.showContactInfo\r\n\t\t}) ;\r\n\t}\r\n\r\n\tonDeleteClick = (id,dispatch) =>{\r\n\r\n\t\taxios.delete(`https:jsonplaceholder.typicode.com/users/${id}`)\r\n\t\t\t\t.then(res=>dispatch({ type : 'DELETE_CONTACT', payload: id}));\t\r\n\t\t\t\t// this delete is to json Placeholder api\t\r\n\r\n\t\t//dispatch({ type : 'DELETE_CONTACT', payload: id})\r\n\t}\r\n\r\n\trender(){\r\n\t\tconst { id,name, email, num } \t= this.props; // if destructuring from props\r\n\t\tconst { showContactInfo } \t=\tthis.state;// if destructuring from state \r\n\r\n\t\treturn(\r\n\t\t\t<Consumer>\r\n\t\t\t\t{value=>{\r\n\t\t\t\t\tconst { dispatch } = value;\r\n\t\t\t\t\t\treturn(\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<h4>Name : {name} \r\n\t\t\t\t\t\t\t\t\t<i onClick={this.onShowCLick} className=\"fa fa-sort-down\"></i>\r\n\t\t\t\t\t\t\t\t\t<Link to={`contact/edit/${id}`}>\r\n\t\t\t\t\t\t\t\t\t\t<i className=\"fas.fa-pencil-alt\"\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{cursor:'pointer',float:'right',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tcolor:'black', marginRight:'1rem'}}\r\n\t\t\t\t\t\t\t\t\t\t\t>edit</i>\r\n\t\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t\t\t<i onClick = { this.onDeleteClick.bind(this,id,dispatch)}\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"fa fa-arrows\" \r\n\t\t\t\t\t\t\t\t\t\tstyle={{cursor : 'pointer' , color:'red'}}>\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t</i>\r\n\r\n\t\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tshowContactInfo ? (\t<ul>\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<li>Email : {email}</li>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<li>Number : {num}</li>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</ul>):null\r\n\t\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t</Consumer>\r\n\t\t\t\r\n\t\t\t)\r\n\t}\r\n}\r\nContact.propTypes = {\r\n\tname : PropTypes.string.isRequired,\r\n\temail: PropTypes.string.isRequired,\r\n\tnum : PropTypes.string,\t\r\n}\r\n// proptypes can also be kept inside class\r\n\r\nexport default Contact;","import React,{ Component} from 'react';\r\nimport Contact from './Contact';\r\nimport { Consumer } from '../../context';\r\n\r\nclass Contacts extends Component{\r\n\trender(){\r\n\t\treturn(\r\n\t\t\t\t<Consumer>\r\n\t\t\t\t\t{ value => { \r\n\t\t\t\t\t\tconst { contacts } = value;\r\n\t\t\t\t\t\treturn(\r\n\t\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t\t<h1>Contact List</h1>\r\n\t\t\t\t\t\t\t\t{ contacts.map(contact => (\r\n\t\t\t\t\t\t\t\t\t<Contact  id ={contact.id} \r\n\t\t\t\t\t\t\t\t\t name = {contact.name} \r\n\t\t\t\t\t\t\t\t\t email={contact.email} \r\n\t\t\t\t\t\t\t\t\t num={contact.phone}/>\r\n\t\t\t\t\t\t\t\t\t// here deleteClickHandler is called from the contacts\r\n\t\t\t\t\t\t\t\t\t// js just like contact.id but it is event\r\n\t\t\t\t\t\t\t\t\t))}\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t}}\r\n\t\t\t\t</Consumer>\r\n\t\t\t)\r\n\t}\r\n}\r\n\r\nexport default Contacts;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst TextInputGroup = ({ label,type,name,value,placeholder,onchange }) => {\r\n\r\n    return (\r\n        <div className=\"form-group\">\r\n\t\t\t<label htmlfor={name}>{label}</label>\r\n\t\t\t<input \r\n\t\t\t\ttype={type}\r\n\t\t\t\tname={name}\r\n\t\t\t\tclassName=\"form-control form-control-lg\"\r\n\t\t\t\tplaceholder = {placeholder}\r\n\t\t\t\tvalue = { value }\r\n\t\t\t\tonChange = {onchange}\r\n\t\t\t\t/>\r\n\t\t</div>\r\n    );\r\n};\r\n\r\nTextInputGroup.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired, \r\n  value: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string.isRequired,\r\n  onchange: PropTypes.func.isRequired,\r\n}\r\n\r\nTextInputGroup.defaultProps = {\r\n  type: 'text'\r\n}\r\n\r\nexport default TextInputGroup;\r\n","import React, { Component } from 'react';\r\nimport {Consumer} from '../../context';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport uuid from 'uuid';\r\nimport axios from 'axios';\r\n\r\nclass AddContact extends Component{\r\n\r\n\tstate = {\r\n\t\tname: ' ',\r\n\t\temail:' ',\r\n\t\tphone: ' '\r\n\r\n\t}\r\n\r\n\tonsubmit = (dispatch , e) => {\r\n\t\te.preventDefault();\r\n\t\t\r\n\t\t const { name , email , phone } = this.state;\r\n\t\t\r\n\t\t const newContact = {\r\n\t\t\t//id: 4, // here trying to use uuid package as id:uuid() , but error so static id is used\r\n\t\t\tname, email, phone\r\n\t\t};\r\n\r\n\t\taxios.post('https:jsonplaceholder.typicode.com/users',newContact)\r\n\t\t\t\t.then(res=>dispatch ({type:'ADD_CONTACT', payload:res.data}));\r\n\r\n\t\t//console.log(newContact);\r\n\t\t// dispatch ({type:'ADD_CONTACT', payload:newContact});\r\n\r\n\t\t // to reset the form\r\n\t\t this.setState({\r\n\t\t \tname:'',\r\n\t\t \temil:'',\r\n\t\t \tphone:''\r\n\t\t });\r\n\r\n\t\t this.props.history.push('/'); // redirects to the homepage when added\r\n\t}\r\n\r\n\r\n\tonchange = (e) => {\r\n\t\te.preventDefault();\r\n\t\tthis.setState({ [e.target.name] : e.target.value });\r\n\t}\r\n\r\n\trender(){\r\n\t\tconst { name, email, phone } = this.state;\t\r\n\r\n\t\treturn(\r\n\t\t\t<Consumer>\r\n\t\t\t\t{ value => {\r\n\t\t\t\t\tconst{ dispatch } = value;\r\n\t\t\t\t\treturn(\r\n\t\t\t\t\t\t<div className=\"card mb-3\">\r\n\t\t\t\t\t\t\t<div className='card-header'>Add Contact </div>\r\n\t\t\t\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t\t\t\t<form onSubmit = { this.onsubmit.bind( this,dispatch)} >\r\n\t\t\t\t\t\t\t\t\t<TextInputGroup\r\n\t\t\t\t\t\t\t\t\t\tlabel=\"Name\"\r\n\t\t\t\t\t\t\t\t\t\tname=\"name\"\r\n\t\t\t\t\t\t\t\t\t\tplaceholder=\"Enter Name\"\r\n\t\t\t\t\t\t\t\t\t\tvalue={name}\r\n\t\t\t\t\t\t\t\t\t\tonchange={this.onchange}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t\t<TextInputGroup\r\n\t\t\t\t\t\t\t\t\t\tlabel=\"Email\"\r\n\t\t\t\t\t\t\t\t\t\ttype = \"email\"\r\n\t\t\t\t\t\t\t\t\t\tname=\"email\"\r\n\t\t\t\t\t\t\t\t\t\tplaceholder=\"Enter Email\"\r\n\t\t\t\t\t\t\t\t\t\tvalue={email}\r\n\t\t\t\t\t\t\t\t\t\tonchange={this.onchange}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t\t<TextInputGroup\r\n\t\t\t\t\t\t\t\t\t\tlabel=\"Phone\"\r\n\t\t\t\t\t\t\t\t\t\tname=\"phone\"\r\n\t\t\t\t\t\t\t\t\t\tplaceholder=\"Enter PHone\"\r\n\t\t\t\t\t\t\t\t\t\tvalue={phone}\r\n\t\t\t\t\t\t\t\t\t\tonchange={this.onchange}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t\t<input \r\n\t\t\t\t\t\t\t\t\t\ttype=\"submit\" \r\n\t\t\t\t\t\t\t\t\t\tvalue=\"ADD CONTACT\"\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-light btn-block\"\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</form>\r\n\t\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)\r\n\t\t\t\t}}\r\n\t\t\t</Consumer>\r\n\t\t\t)\r\n\t}\r\n}\r\n\r\nexport default AddContact;\r\n\r\n","import React, {Component} from 'react';\r\n\r\nclass Test extends Component {\r\n   \r\n    state={\r\n    \ttitle:'',\r\n    \tbody: ''\r\n    }\r\n\r\n    componentDidMount(){\r\n    \tfetch('https:jsonplaceholder.typicode.com/todos/1')\r\n  \t\t.then(response => response.json())\r\n  \t\t.then(data => this.setState({\r\n  \t\t\ttitle: data.title,\r\n  \t\t\tbody : data.body\r\n  \t\t}))\r\n    }\r\n\r\n    render() {\r\n    \tconst{ title ,body } = this.state;\r\n        return (\r\n\t        \t<div>\r\n\t            \t<h1>{title}</h1>\r\n\t            \t<p>{body}</p>\r\n\t            </div>\t\r\n\t        );\r\n    }\r\n}\r\n\r\nexport default Test;\r\n","import React, { Component } from 'react';\r\nimport {Consumer} from '../../context';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport uuid from 'uuid';\r\nimport axios from 'axios';\r\n\r\nclass EditContact extends Component{\r\n\r\n\tstate = {\r\n\t\tname: ' ',\r\n\t\temail:' ',\r\n\t\tphone: ' '\r\n\r\n\t}\r\n\r\n\t// componentDidMount(){\r\n\t// \tconst {id} = this.props.match.params;\r\n\t// \tconst res = axios.get(`https:jsonplaceholder.typicode.com/users/${id}`);\r\n\r\n\t// \tconst contact = res.data;\r\n\t// \tthis.setState({\r\n\t// \t\tname:contact.name,\r\n\t// \t\temail:contact.email,\r\n\t// \t\tphone:contact.phone\r\n\t// \t})\r\n\t// }\r\n\r\n\tcomponentDidMount(){\r\n\t\tconsole.log('test');\r\n\t\taxios.get('https:jsonplaceholder.typicode.com/users')\r\n\t\t\t.then(res => this.setState({ contacts : res.data }));\r\n\t}\r\n\r\n\tonsubmit = (dispatch , e) => {\r\n\t\te.preventDefault();\r\n\t\t\r\n\t\t const { name , email , phone } = this.state;\r\n\t\t\r\n\t\t // to reset the form\r\n\t\t this.setState({\r\n\t\t \tname:'',\r\n\t\t \temil:'',\r\n\t\t \tphone:''\r\n\t\t });\r\n\r\n\t\t this.props.history.push('/'); // redirects to the homepage when added\r\n\t}\r\n\r\n\r\n\tonchange = (e) => {\r\n\t\te.preventDefault();\r\n\t\tthis.setState({ [e.target.name] : e.target.value });\r\n\t}\r\n\r\n\trender(){\r\n\t\tconst { name, email, phone } = this.state;\t\r\n\r\n\t\treturn(\r\n\t\t\t<Consumer>\r\n\t\t\t\t{ value => {\r\n\t\t\t\t\tconst{ dispatch } = value;\r\n\t\t\t\t\treturn(\r\n\t\t\t\t\t\t<div className=\"card mb-3\">\r\n\t\t\t\t\t\t\t<div className='card-header'>Edit Contact </div>\r\n\t\t\t\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t\t\t\t<form onSubmit = { this.onsubmit.bind( this,dispatch)} >\r\n\t\t\t\t\t\t\t\t\t<TextInputGroup\r\n\t\t\t\t\t\t\t\t\t\tlabel=\"Name\"\r\n\t\t\t\t\t\t\t\t\t\tname=\"name\"\r\n\t\t\t\t\t\t\t\t\t\tplaceholder=\"Enter Name\"\r\n\t\t\t\t\t\t\t\t\t\tvalue={name}\r\n\t\t\t\t\t\t\t\t\t\tonchange={this.onchange}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t\t<TextInputGroup\r\n\t\t\t\t\t\t\t\t\t\tlabel=\"Email\"\r\n\t\t\t\t\t\t\t\t\t\ttype = \"email\"\r\n\t\t\t\t\t\t\t\t\t\tname=\"email\"\r\n\t\t\t\t\t\t\t\t\t\tplaceholder=\"Enter Email\"\r\n\t\t\t\t\t\t\t\t\t\tvalue={email}\r\n\t\t\t\t\t\t\t\t\t\tonchange={this.onchange}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t\t<TextInputGroup\r\n\t\t\t\t\t\t\t\t\t\tlabel=\"Phone\"\r\n\t\t\t\t\t\t\t\t\t\tname=\"phone\"\r\n\t\t\t\t\t\t\t\t\t\tplaceholder=\"Enter PHone\"\r\n\t\t\t\t\t\t\t\t\t\tvalue={phone}\r\n\t\t\t\t\t\t\t\t\t\tonchange={this.onchange}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t\t<input \r\n\t\t\t\t\t\t\t\t\t\ttype=\"submit\" \r\n\t\t\t\t\t\t\t\t\t\tvalue=\"Update CONTACT\"\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-light btn-block\"\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</form>\r\n\t\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)\r\n\t\t\t\t}}\r\n\t\t\t</Consumer>\r\n\t\t\t)\r\n\t}\r\n}\r\n\r\nexport default EditContact;\r\n\r\n","import React from 'react';\nimport { BrowserRouter as Router, Route , Switch } from 'react-router-dom';\nimport './App.css';\nimport Header from './component/layout/Header.js';\nimport About from './component/pages/About.js';\nimport NotFound from './component/pages/NotFound.js';\nimport Contacts from './component/contacts/Contacts.js';\nimport AddContact from './component/contacts/AddContact.js';\nimport EdiContact from './component/contacts/EditContact.js';\nimport Test from './component/Test.js';\nimport { Provider} from './context'; \n\nfunction App() {\n\n  return (\n  \t<Provider>\n  \t\t<Router>\n\t\t    <div className=\"App\">\n\t\t      \t<Header branding='Contact Manager'/>\n\t\t      \t<div className=\"Container\">\n\t\t      \t\t<Switch>\n\t\t      \t\t\t<Route exact path=\"/\" component={ Contacts }/>\n\t\t      \t\t\t<Route exact path=\"/contact/add\" component={ AddContact }/>\n\t\t      \t\t\t<Route exact path=\"/contact/edit/:id\" component={ AddContact }/>\n\t\t      \t\t\t<Route exact path=\"/about\" component={ About }/>\n\t\t      \t\t\t<Route exact path=\"/test\" component={ Test }/>\n\t\t      \t\t\t<Route component={ NotFound }/>\n\t\t      \t\t</Switch>\t\t\t    \n\t\t      \t</div>\t      \n\t\t    </div>\n\t    </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}